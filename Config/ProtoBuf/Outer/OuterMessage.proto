syntax = "proto3";
package Fantasy.Network.Message;

/// -------------------------------- 登录服 --------------------------------------------
/// 注册账号
message C2R_RegisterRequest // IRequest,R2C_RegisterResponse
{
	string UserName = 1;
	string PassWord = 2;
}
message R2C_RegisterResponse // IResponse
{
	int64 PlayerId = 1;
}
/// 登录账号
message C2R_LoginRequest // IRequest,R2C_LoginResponse
{
	string UserName = 1;
	string PassWord = 2;
}
message R2C_LoginResponse // IResponse
{
	int64 PlayerId = 1;
}

/// -------------------------------- 网关服 - 网关消息（网关与客户端通信） --------------------------------------------

/// 注册账号
message C2G_RegisterRequest // IRequest,G2C_RegisterResponse
{
	string UserName = 1;
	string PassWord = 2;
}
message G2C_RegisterResponse // IResponse
{
	int64 PlayerId = 1;
}

/// 登录账号
message C2G_LoginRequest // IRequest,G2C_LoginResponse
{
	string UserName = 1;
	string PassWord = 2;
}
message G2C_LoginResponse // IResponse
{
	int64 PlayerId = 1;
}

/// 进入地图
message C2G_EnterMapRequest // IRequest,G2C_EnterMapResponse
{
	int64 PlayerId = 2;
}
message G2C_EnterMapResponse // IResponse
{
	int64 PlayerId = 1;
}

// 测试消息，非RPC，注释要用IMessage
message C2G_TestMessage // IMessage
{
	string Message = 1;
}

// 测试推送消息，注释要用IMessage
message G2C_TestPushMessage // IMessage
{
	string Message = 1;
}

/// -------------------------------- 网关服 - 路由消息（各进程Scene通信） --------------------------------------------
/// 进入地图
message G2Map_CreatePlayerRequest // IRouteRequest,Map2G_CreatePlayerResponse
{
	int64 PlayerId = 1;
	int64 SessionRuntimeId = 2;
}
message Map2G_CreatePlayerResponse // IRouteResponse
{
	int64 AddressableId = 1;
}


/// -------------------------------- 网关服 - 寻址消息（非网关Scene与客户端通信） --------------------------------------------
/// 退出地图
message C2Map_ExitRequest // IAddressableRouteRequest,Map2C_ExitResponse
{
	string Message = 1;
} 
message Map2C_ExitResponse // IAddressableRouteResponse
{
	string Message = 1;
}
/// 位置对象
message MoveInfo
{
	float X = 1;
  	float Y = 2;
  	float Z = 3;
	float RotA = 4;
	float RotB = 5;
	float RotC = 6;
	float RotW = 7;
	int64 MoveEndTime = 8;
}
/// 移动操作
message C2Map_MoveMessage // IAddressableRouteMessage
{
	MoveInfo MoveInfo = 1;
}
/// 核心状态同步

message Map2C_MoveBroadcast // IAddressableRouteMessage
{
	repeated MoveInfo Moves = 1;
}